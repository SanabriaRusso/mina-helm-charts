needs: [] # Other Release name
templates: # required. Template for Release
  - templates/plain.yaml.gotmpl
  - templates/minarustbp.yaml.gotmpl
values: # Default environment values, used in templates only
  ## Secrets to be created in the namespace
  ## These are used in the templates to create secrets
  secrets: []
  ## Debug mode
  ## If this is set to true, then no automatic args are injected.
  ## This is useful for debugging, but not recommended for production
  debug: false
  ## Ingress configuration
  ## This is used to create an Ingress resource for the daemon
  ## It defaults to external port. Usually, this is used for graphql-port
  ingress:
    enable: false
  ## Init containers configuration
  extraInitContainers: [] # optional. Extra init containers to add to the pod
  ## Extra ingress configuration
  extraIngress: {}
  ## Extra services configuration
  extraServices: {}
  ## Extra volumes configuration
  extraVolumes: {}
  daemon:
    ## Ports configuration includes keys from Kubernetes PodSpec
    ## Even if in the Kubernetes API these are specified as a list,
    ## we use a map to allow for easy referencing in templates.
    ##
    ## At least one port definition is required.
    ## The ports below are the bare minimum for Mina Rust BP nodes.
    ports: # required
      external:
        name: external-port
        protocol: TCP
        containerPort: 3000
        hostPort: 3000
      libp2p:
        name: libp2p-port
        protocol: TCP
        containerPort: 8302
    ## Required Environment variables for the daemon
    ## NOTE: as with ports, these are specified as a map for easy reference in templates.
    env: {} # Empty - set at deployment time
    ## Additional envs from secrets
    ## These are used to create environment variables from existing secrets
    envFromSecret: []
    ## Additional arguments for the daemon command. Daemon-level
    ## over-writes this list, and all list.
    extraArgs: []
    ## Override daemon image (empty by default)
    image: {}
    ## Override daemon command (empty by default)
    command: []
    ## Override daemon args (empty by default)
    args: [] # Will be customized per instance
    ## Override peer list URL (empty by default)
    peerListUrl: "" # BP uses --peers argument directly
    ## Service configuration (empty by default)
    service:
      type: "ClusterIP"
      annotations: {}
    ## Probe configurations
    livenessProbe:
      exec:
        command:
          - sh
          - -c
          - echo "I'm alive"
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readinessProbe:
      failureThreshold: 10
      periodSeconds: 60
      initialDelaySeconds: 200
      timeoutSeconds: 5
      exec:
        command:
          - sh
          - -c
          - |
            RESPONSE=$(curl -s -X POST http://localhost:3000/graphql -H "Content-Type: application/json" -d '{"query": "{ syncStatus }"}')
            STATUS=$(echo "$RESPONSE" | jq -r '.data.syncStatus')
            if [ "$STATUS" = "SYNCED" ]; then
              exit 0
            else
              echo "Readiness probe failed: syncStatus is $STATUS"
              exit 1
            fi
    ## Volume mounts (empty by default)
    volumeMounts: []
    extraVolumeMounts: []
    ## Extra containers and volume mounts (empty by default)
    extraContainers: []
    ## Replica count (empty by default)
    replicas: ""
    ## Additional init configuration for the daemon
    ## This includes producer key generation
    init: # required if .enable: true
      enable: true # Enable init for producer key generation
      producerKey:
        generate: true # Generate producer key in init container
        password: "" # MINA_PRIVKEY_PASS - set at deployment time
        fromSecret: false
        secret:
          name: mina-producer-key
          key: key
      # Standard init fields (required by plain.yaml.gotmpl but not used for BP)
      libp2pKeys:
        skip: true # BP doesn't need libp2p key generation
        password: ""
        fromSecret: false
        secret:
          name: mina-libp2p-keys
      genesis:
        skip: true # BP doesn't need genesis config
        fromSecret: false
        secret:
          name: a-secret
          key: genesis-config.json
        fromValue: false
        value:
          filename: a-genesis-config.json
          data: "{}"
      keys:
        password: ""
        fromSecret: false
        secret:
          name: mina-keys
    persistence: # optional. Persistent volume configuration
      enable: false
      annotations: {}
      claim:
        storageClassName: openebs-hostpath
        size: 10Gi
    ## Volumes configuration
    volumes: []
    resources:
      requests:
        cpu: "2"
        memory: 3Gi
      limits:
        cpu: "3"
        memory: 4Gi
  tolerations: []
  affinity: {}
