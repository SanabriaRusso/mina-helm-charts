{{/*
 Override default values for mina-standard-daemon here
*/}}
fullnameOverride: {{ required "Node name is required" .node.name }}
strategy:
  type: Recreate
podAnnotations: {}
podLabels:
  role: {{ required "Node role is required" .node.role }}

ingress:
{{- if and (hasKey .node.values "ingress") (eq (printf "%v" .node.values.ingress.enable) "true") }}
{{- toYaml .node.values.ingress | nindent 2 }}
{{- end }}

{{- if hasKey .node.values "extraIngress" }}
extraIngress:
{{- toYaml .node.values.extraIngress | nindent 2 }}
{{- end }}

secrets:
{{- include "mina-standard-node.plain.secrets" . | indent 2 }}

service:
{{- include "mina-standard-node.plain.service" . | indent 2 }}

{{- if hasKey .node.values "extraServices" }}
extraServices:
{{- toYaml .node.values.extraServices | nindent 2 }}
{{- end }}

initContainers:
{{ include "mina-standard-node.plain.initContainers" . | indent 2 }}

{{- if hasKey .node.values "extraInitContainers" }}
extraInitContainers:
{{- toYaml .node.values.extraInitContainers | nindent 2 }}
{{- end }}

daemon:
  name: {{ required "Node name is required" .node.name }}
  network: {{ include "mina-standard-node.plain.network" . }}
  role: {{ required "Node role is required" .node.role }}
  image:
  {{ include "mina-standard-node.plain.image" . | indent 4 }}
  {{- if hasKey .node.values.daemon "command" }}
  command:
  {{- toYaml .node.values.daemon.command | nindent 4 }}
  {{- end }}
  args:
  {{- if and (hasKey .node.values.daemon "args") (.node.values.daemon.args) }}
  {{- range .node.values.daemon.args }}
    - {{ . | toString | quote }}
  {{- end }}
  {{- end }}
  env:
  {{ include "mina-standard-node.standard.env" . | indent 4 }}
  ports:
  {{ include "mina-standard-node.standard.ports" . | indent 4 }}
  resources:
  {{- toYaml .node.values.daemon.resources | nindent 4 }}
  livenessProbe:
  {{- if and (hasKey .node.values.daemon "livenessProbe") .node.values.daemon.livenessProbe }}
    {{- toYaml .node.values.daemon.livenessProbe | nindent 4 }}
  {{- else }}
    failureThreshold: 10
    initialDelaySeconds: 300
    periodSeconds: 60
    successThreshold: 1
    terminationGracePeriodSeconds: 10
    tcpSocket:
      port: external-port
    timeoutSeconds: 5
  {{- end }}
  readinessProbe:
  {{- if and (hasKey .node.values.daemon "readinessProbe") .node.values.daemon.readinessProbe }}
    {{- toYaml .node.values.daemon.readinessProbe | nindent 4 }}
  {{- else }}
    failureThreshold: 10
    initialDelaySeconds: {{ (eq .node.role "archive") | ternary 10 300 }} {{/* Archive nodes have a shorter initial delay */}}
    periodSeconds: {{ (eq .node.role "archive") | ternary 10 60 }} {{/* Archive nodes have a shorter check periods */}}
    successThreshold: 1
    timeoutSeconds: 5
    exec:
      command:
      - /bin/bash
      - -c
      - echo "Node does not have a readiness probe"
  {{- end }}
  volumeMounts:
  {{- if hasKey .node.values.daemon "volumeMounts" }}
  {{- toYaml .node.values.daemon.volumeMounts | nindent 4 }}
  {{- end }}

  {{- if hasKey .node.values.daemon "extraContainers" }}
  extraContainers:
  {{- range .node.values.daemon.extraContainers }}
    {{- toYaml (. | list) | nindent 4 }}
  {{- end -}}
  {{- end }}

volumes:
{{- if hasKey .node.values "volumes" }}
{{- toYaml .node.values.volumes | nindent 2 }}
{{- end }}

{{- if hasKey .node.values "extraVolumes" }}
extraVolumes:
{{- toYaml .node.values.extraVolumes | nindent 2 }}
{{- end }}

persistentVolumeClaim:
{{ include "mina-standard-node.plain.persistentVolumeClaim" . | indent 2 }}

tolerations:
{{ include "mina-standard-node.plain.tolerations" . | indent 2 }}

affinity:
{{ include "mina-standard-node.plain.affinity" . | indent 2 }}