# Default values for mina-daemon-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This sets the restart policy for the Pod more information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
restartPolicy: Always


# This sets up the Pod update strategy more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
strategy: {}
  # type: RollingUpdate # or 'Recreate'
  # rollingUpdate:
  #   maxUnavailable: 1
  #   maxSurge: 1

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is a list of secrets to create.
secrets:
  secretsAnnotations:
    app.minaprotocol.org/baseline-chart: mina-daemon-chart
  secrets: []
    # - name: test
    #   labels:
    #     mylabel: label
    #   data:
    #     key: value

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# This is for setting Pod-level security context more information can be found here: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#podsecuritycontext-v1-core
podSecurityContext: {}
  # runAsUser: 1000
  # runAsGroup: 3000
  # fsGroup: 2000
  # supplementalGroups: [4000]

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting up the init containers
initContainers: []
# - name: init-container
#   image:
#     repository: mina-init-container
#     pullPolicy: IfNotPresent
#     tag: ""

# This is for setting up the extra init containers
extraInitContainers: []
# - name: extra-init-container
#   image:
#     repository: mina-extra-init-container
#     pullPolicy: IfNotPresent
#     tag: ""

daemon:
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  name: mina-daemon

  # This sets the network name for the daemon
  network: mainnet

  # This sets the role of the node
  # This is a list of valid roles: plain, coordinator, snarkWorker, seed, archive
  role: plain

  # This is only supported for the 'snarkWorker' role
  replicas: 1

  image:
    repository: minaprotocol/mina-daemon
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "3.2.0-49b523c-bookworm-mainnet"

  # This sets the command to run in the container more information can be found here: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
  command:
    - "echo"
    - "Hello, World!"

  # This sets the arguments to run in the container more information can be found here: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
  args: []
    # - "Hello, World!"

  # This extraArgs are appended to the command and args fields
  extraArgs: []
    # - "--foo=bar"

  # This sets the security context more information can be found here: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#securitycontext-v1-core
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up the environment variables more information can be found here: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  env: []
    # - name: MY_ENV_VAR
    #   value: my-env-var-value

  # This is for setting up the extra environment variables
  # NOTE: appending envs overrides the corresponding daemon env
  extraEnv: []
    # - name: MY_EXTRA_ENV_VAR
    #   value: my-extra-env-var-value

  # This is for setting up the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
  ports: []
    # - name: http
    #   containerPort: 80
    #   protocol: TCP

  # This is for setting up the extra ports
  extraPorts: []
    # - name: https
    #   containerPort: 443
    #   protocol: TCP

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # This is for setting up the extra volume mounts
  extraVolumeMounts: []

  # This is for setting up the extra containers more information can be found here: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  extraContainers: []
    # - name: mina-extra
    #   image:
    #     repository: mina-extra
    #     pullPolicy: IfNotPresent
    #     tag: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # Enables the use of a service
  enable: true
  # Service annotations
  annotations: {}
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: http
  protocol: TCP
  name: http
  # This adds extra ports to the service
  extraPorts: []
  # - port: 443
  #   targetPort: https
  #   protocol: TCP
  #   name: https

extraServices: []
# - name: https
#   type: ClusterIP
#   annotations: {}
#   labels: {}
#   skipSelectorLabels: true
#   selector: {}
#   ports:
#     - port: 443
#       targetPort: https
#       protocol: TCP
#       name: https

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enable: false
  ingressClassName: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
          # service:
          #   name: mina-daemon
          #   port:
          #     number: 3085
          #     name: graphql-port
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# This is for setting up the extra ingress
extraIngress: []
# - name: extra-ingress
#   ingressClassName: "nginx"
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: Prefix
#           # service:
#           #   name: mina-daemon
#           #   port:
#           #     number: 3085
#           #     name: graphql-port
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# This is for setting up the extra volumes
extraVolumes: []

# This is for setting up the persistent volume claim more information can be found here: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistentVolumeClaim:
  enable: false
  name: ""
  annotations: {}
  accessMode: ReadWriteOnce
  storageClassName: standard
  size: 5Gi

# This is for setting up the node selector more information can be found here: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}

# This is for setting up the tolerations more information can be found here: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []

# This is for setting up the affinity more information can be found here: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# This will load postgresql as dependency chart.
postgresql:
  enable: false
